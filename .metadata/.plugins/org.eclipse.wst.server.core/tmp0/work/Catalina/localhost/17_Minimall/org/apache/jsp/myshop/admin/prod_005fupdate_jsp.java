/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-17 07:50:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myshop.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import my.shop.ProductBean;
import my.shop.ProductDao;
import my.shop.CategoryBean;
import java.util.ArrayList;
import my.shop.CategoryDao;

public final class prod_005fupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/myshop/admin/bottom.jsp", Long.valueOf(1713248637979L));
    _jspx_dependants.put("/myshop/admin/top.jsp", Long.valueOf(1713252737271L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(5);
    _jspx_imports_classes.add("my.shop.CategoryDao");
    _jspx_imports_classes.add("my.shop.ProductBean");
    _jspx_imports_classes.add("my.shop.CategoryBean");
    _jspx_imports_classes.add("my.shop.ProductDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("myshop\\admin\\top.jsp<br>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/style.css\" type = \"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("	body{\r\n");
      out.write("		text-align : center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<h1> 쇼핑몰(관리자용)</h1>\r\n");
      out.write("\r\n");
      out.write("<p align = \"center\">\r\n");
      out.write("	<a href = \"main.jsp\">쇼핑몰홈</a> |\r\n");
      out.write("	<a href = \"");
      out.print( request.getContextPath() );
      out.write("/main.jsp\">로그인</a> |\r\n");
      out.write("	<a href = \"\">로그아웃</a>\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<table border = 1 width = \"90%\" height = \"400\">\r\n");
      out.write("	<tr align = \"center\" height = \"40\">\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/admin/cate_input.jsp\">카테고리 등록</a>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/admin/cate_list.jsp\">카테고리 목록</a>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/admin/prod_input.jsp\">상품 등록</a>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/admin/prod_list.jsp\">상품 목록</a>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/admin/shopping_list.jsp\">쇼핑 내역</a>\r\n");
      out.write("		</td>\r\n");
      out.write("		<td>\r\n");
      out.write("			<a href = \"");
      out.print( request.getContextPath() );
      out.write("/myshop/display/mall.jsp\">사용자 홈</a>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	\r\n");
      out.write("	<tr height = \"320\">\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String[] pspec = {"NORMAL", "HIT", "NEW", "BEST"};
	int pnum = Integer.parseInt(request.getParameter("pnum"));
	
	ProductDao pdao = ProductDao.getInstance();
	ProductBean pb = pdao.getProductByPnum(pnum);
	String requestDir = request.getContextPath()+"/myshop/images";

      out.write("\r\n");
      out.write("	<td colspan = \"6\" align = \"center\">\r\n");
      out.write("		<form action = \"prod_updateProc.jsp?pnum=");
      out.print( pb.getPnum() );
      out.write("&pcategory_fk=");
      out.print( pb.getPcategory_fk() );
      out.write("\" method = \"post\" enctype = \"multipart/form-data\">\r\n");
      out.write("			<table border = \"1\">\r\n");
      out.write("				<caption>상품 수정(prod_update.jsp)</caption>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\" width = \"15%\">카테고리</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select name = \"pcategory_fk\" disabled>\r\n");
      out.write("							");

						        CategoryDao cdao = CategoryDao.getInstance();
						        ArrayList<CategoryBean> clist = cdao.getAllCategory();
						        if(clist.size() == 0) {
							
      out.write("   	 <option value=\"카테고리 없음\">카테고리 없음</option>\r\n");
      out.write("							");
 } else {
									for(CategoryBean cb : clist) {					
						    
      out.write(" <option value=\"");
      out.print( cb.getCode() );
      out.write('"');
      out.write(' ');
 if(pb.getPcategory_fk().contains(cb.getCode())) { 
      out.write(" selected ");
 } 
      out.write('>');
      out.print( cb.getCname() );
      out.write('[');
      out.print( cb.getCode() );
      out.write("]</option>\r\n");
      out.write("						    ");
  } 
						    } 
      out.write("\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품번호</td>\r\n");
      out.write("					<td>");
      out.print( pb.getPnum() );
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("								\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품명</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type = \"text\" name = \"pname\" value = \"");
      out.print( pb.getPname() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">제조회사</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type = \"text\" name = \"pcompany\" value = \"");
      out.print( pb.getPcompany() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품이미지</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						\r\n");
      out.write("						<img src = \"");
      out.print( requestDir + "/" + pb.getPimage() );
      out.write("\" width = \"100\" height = \"100\">\r\n");
      out.write("						<input type = \"file\" name = \"pimage\">\r\n");
      out.write("						<input type = \"text\" name = \"pimage2\" value = \"");
      out.print(  pb.getPimage() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품수량</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type = \"text\" name = \"pqty\" value = \"");
      out.print(  pb.getPqty() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품 가격</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type = \"text\" name = \"price\" value = \"");
      out.print( pb.getPrice() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품 스펙</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<select name=\"pspec\">\r\n");
      out.write("						    ");
 for (int i = 0; i < pspec.length; i++) { 
      out.write("\r\n");
      out.write("						        <option value=\"");
      out.print( pspec[i] );
      out.write('"');
      out.write(' ');
 if(pb.getPspec().equals(pspec[i])) { 
      out.write(" selected ");
 } 
      out.write('>');
      out.print( pspec[i] );
      out.write("</option>\r\n");
      out.write("						    ");
 } 
      out.write("\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품 소개</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<textarea name = \"pcontents\" rows=\"5\" cols=\"30\"> ");
      out.print( pb.getPcontents() );
      out.write("</textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class = \"m2\">상품 포인트</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type = \"text\" name = \"point\" value = \"");
      out.print( pb.getPoint() );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan = \"2\" align = \"center\" class = \"m1\">\r\n");
      out.write("						<input type = \"submit\" value = \"상품 수정\">\r\n");
      out.write("						<input type = \"reset\" value = \"취 소\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/style.css\" type = \"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("	body{\r\n");
      out.write("		text-align : center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("		</tr>\r\n");
      out.write("			<td colspan = \"6\" align = \"center\">\r\n");
      out.write("				myshop\\admin\\bottom.jsp<br>	\r\n");
      out.write("				쌍용 SHOPPING MALL\r\n");
      out.write("			</td>\r\n");
      out.write("		<tr>\r\n");
      out.write("		\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("	</table>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
