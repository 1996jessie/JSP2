/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-22 05:10:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myshop.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import my.shop.board.BoardBean;
import my.shop.board.BoardDao;
import java.text.SimpleDateFormat;
import javax.sql.DataSource;
import javax.naming.*;
import java.sql.*;
import java.util.ArrayList;
import my.shop.CategoryBean;
import java.util.ArrayList;
import my.shop.CategoryDao;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/myshop/board/../display/mall_bottom.jsp", Long.valueOf(1713410776267L));
    _jspx_dependants.put("/myshop/board/color.jsp", Long.valueOf(1712804890445L));
    _jspx_dependants.put("/myshop/board/../display/mall_top.jsp", Long.valueOf(1713762135425L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.naming");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("my.shop.board.BoardDao");
    _jspx_imports_classes.add("my.shop.CategoryDao");
    _jspx_imports_classes.add("javax.sql.DataSource");
    _jspx_imports_classes.add("my.shop.board.BoardBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("my.shop.CategoryBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\" type = \"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("	body {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	table{\r\n");
      out.write("		margin: 5px auto;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("mall_top.jsp<br>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/style.css\" type = \"text/css\"/>\r\n");
      out.write("<style>\r\n");
      out.write("	body{\r\n");
      out.write("		text-align : center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.logout{\r\n");
      out.write("		float : right;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");

	String contextPath = request.getContextPath();
	CategoryDao cdao = CategoryDao.getInstance();
	ArrayList<CategoryBean> clist = cdao.getAllCategory();
	String memid = (String)session.getAttribute("memid");
	

      out.write("\r\n");
      out.write("<table border = 1>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan = \"2\" align = \"center\" height = \"50\">\r\n");
      out.write("			<a href = \"");
      out.print( contextPath );
      out.write("/main.jsp\"> Home </a>|\r\n");
      out.write("			");

				if(memid.equals("admin")) {
			
      out.write("		<a href = \"");
      out.print( contextPath );
      out.write("/myshop/admin/main.jsp\"> 관리자홈 	</a>|\r\n");
      out.write("			");
	} 
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<a href = \"");
      out.print( contextPath );
      out.write("/myshop/display/mall.jsp\"> 쇼핑몰홈 </a> |\r\n");
      out.write("			<a href = \"");
      out.print( contextPath );
      out.write("/myshop/display/mall_cartList.jsp\"> 장바구니 </a>|\r\n");
      out.write("			<a href = \"");
      out.print( contextPath );
      out.write("/myshop/board/list.jsp\"> 게시판 </a>|\r\n");
      out.write("			<a href = \"");
      out.print( contextPath );
      out.write("/myshop/display/company.jsp\"> 회사소개 </a>|\r\n");
      out.write("			<span class = \"logout\"> ");
      out.print( memid );
      out.write("님  </span>\r\n");
      out.write("			<a class = \"logout\" href = \"");
      out.print( contextPath );
      out.write("/logout.jsp\">\r\n");
      out.write("				<img src = \"");
      out.print( contextPath );
      out.write("/img/logout3.jpg\" width = \"50\">\r\n");
      out.write("			</a>		\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("		\r\n");
      out.write("	<tr width = \"20%\">\r\n");
      out.write("		<td valign = \"top\">\r\n");
      out.write("			<table border = 1 >\r\n");
      out.write("				<caption>카테고리</caption>\r\n");
      out.write("					");


						if(clist.size() == 0) {
					
      out.write("\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td> 카테고리 없음 </td>\r\n");
      out.write("							</tr>\r\n");
      out.write("					");
	} else {
							for(CategoryBean cb : clist) {
					
      out.write("		<tr>\r\n");
      out.write("								<td><a href = \"");
      out.print( contextPath );
      out.write("/myshop/display/mall_cgList.jsp?code=");
      out.print(cb.getCode());
      out.write("&cname=");
      out.print(cb.getCname());
      out.write('"');
      out.write('>');
      out.print( cb.getCname() );
      out.write('[');
      out.print( cb.getCode() );
      out.write("] </a> </td>\r\n");
      out.write("							</tr>\r\n");
      out.write("								\r\n");
      out.write("					");
		}
						}	
					
      out.write("		\r\n");
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("		</td>\r\n");
      out.write("		\r\n");
      out.write("		<td width = \"600px\" align = \"center\" valign = \"top\">\r\n");
      out.write("   \r\n");
      out.write("list.jsp<br>\r\n");
 
 String bodyback_c="#e0ffff";
 String back_c="#8fbc8f";
 String title_c="#5f9ea0";
 String value_c="#b0e0e6";
 String bar="#778899";

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

	
	int pageSize = 10; //한 페이지에 10개씩
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

	String pageNum = request.getParameter("pageNum"); //문자열을 숫자로 바꿈
	if(pageNum == null) {
		pageNum = "1";
	}
	
	int currentPage = Integer.parseInt(pageNum);
	int startRow = (currentPage - 1) * pageSize + 1; //현재 페이지의 시작번호
	int endRow = currentPage * pageSize; // 현재 페이지의 끝번호
	int count = 0;
	int number = 0;
	
	BoardDao bdao = BoardDao.getInstance();
	ArrayList<BoardBean> articleList = bdao.getArticles(startRow, endRow);
	count = bdao.getArticleCount();
	//System.out.println("count : " + count);
	
	number = count - (currentPage - 1) * pageSize;


      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<b>글목록(전체 글 : ");
      out.print( count );
      out.write(")</b>\r\n");
      out.write("<table border = 1 width = 90%>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align = \"center\" bgcolor = \"");
      out.print( value_c );
      out.write("\">\r\n");
      out.write("			<a href = \"writeForm.jsp\">글쓰기</a>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");

	if(count == 0) {

      out.write("		<table border = 1 width = 800px>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align = \"center\">\r\n");
      out.write("				게시판에 저장된 글이 없습니다.\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
	
	} else {

      out.write("	\r\n");
      out.write("	<table border = 1 width = 90%>\r\n");
      out.write("		<tr bgcolor = \"");
      out.print( value_c );
      out.write("\" align = \"center\">\r\n");
      out.write("			<td>번호</td>\r\n");
      out.write("			<td>제   목</td>\r\n");
      out.write("			<td>작성자</td>\r\n");
      out.write("			<td>작성일</td>\r\n");
      out.write("			<td>조회</td>\r\n");
      out.write("			<td>IP</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("	");

	for(BoardBean bb : articleList) {
	
	
      out.write("\r\n");
      out.write("		<tr align = \"center\">\r\n");
      out.write("			<td>");
      out.print( number-- );
      out.write("</td> <!-- 일련번호 -->\r\n");
      out.write("			<td align = \"left\">\r\n");
      out.write("				");

					int wid = 0; //원글 : 0, 답글 : 1, 답답글 : 2....
					if(bb.getRe_level() > 0){
						wid = bb.getRe_level() * 20;
				
      out.write("		<img src=\"../../img/level.gif\" width=\"");
      out.print( wid );
      out.write("\" height = \"15\">\r\n");
      out.write("						<img src=\"../../img/re.gif\">\r\n");
      out.write("				");
	}	
      out.write("						\r\n");
      out.write("				<a href = \"content.jsp?num=");
      out.print(bb.getNum());
      out.write("&pageNum=");
      out.print(pageNum);
      out.write('"');
      out.write('>');
      out.print( bb.getSubject());
      out.write("</a>\r\n");
      out.write("				");

					if(bb.getReadcount() >= 10) {
				
      out.write("		<img src=\"../../img/hot.gif\" height = \"15\">\r\n");
      out.write("				");
	}	
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>");
      out.print( bb.getWriter() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( sdf.format(bb.getReg_date()) );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( bb.getReadcount() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( bb.getIp() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	");
	} //for 
      out.write("\r\n");
      out.write("	</table>\r\n");
	} //else
	
	//페이지 설정
	if(count > 0) {
		int pageCount = count / pageSize + (count % pageSize == 0 ? 0 : 1);
		int pageBlock = 10; //한번에 10개의 페이지가 보이게 하자
		
		int startPage = ((currentPage - 1) / pageBlock * pageBlock) +  1;
		int endPage = startPage + pageBlock - 1;
		if(endPage > pageCount) {
			endPage = pageCount;
		}
		if(startPage > 10) {

      out.write("			<a href = \"list.jsp?pageNum=");
      out.print( startPage-10 );
      out.write("\">[이전]</a>		\r\n");
		}
		for(int i = startPage;i<=endPage;i++) {

      out.write("			<a href = \"list.jsp?pageNum=");
      out.print( i );
      out.write('"');
      out.write('>');
      out.write('[');
      out.print( i );
      out.write("]</a>\r\n");
		}
		if(endPage < pageCount) {

      out.write("			<a href = \"list.jsp?pageNum=");
      out.print( startPage+10 );
      out.write("\">[다음]</a>\r\n");
		}
	}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr height = \"40\" align = \"center\">\r\n");
      out.write("	<td colspan = \"2\">\r\n");
      out.write("		mall_bottom.jsp<br>\r\n");
      out.write("		서비스 약관 | 광고안내 | 제휴문의 | 고객센터 | 찾아오시는 길\r\n");
      out.write("	</td>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("</table>");
      out.write("   \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
