/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-08 09:39:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.ManageBook;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import reserve.ReserveDao;
import borrow.BorrowDao;
import java.io.File;
import book.BookDao;

public final class deleteBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("book.BookDao");
    _jspx_imports_classes.add("reserve.ReserveDao");
    _jspx_imports_classes.add("borrow.BorrowDao");
    _jspx_imports_classes.add("java.io.File");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("admin-ManageBook-deleteBook.jsp<br>\r\n");
      out.write("\r\n");

	int bnum = Integer.parseInt(request.getParameter("bnum"));
	System.out.println("<admin-ManageBook-deleteBook.jsp> bnum : " + bnum);

	request.setCharacterEncoding("UTF-8");
	String bimage = request.getParameter("bimage");
	
	
	BookDao bdao = BookDao.getInstance();
	BorrowDao brdao = BorrowDao.getInstance();
	ReserveDao rdao = ReserveDao.getInstance();
	boolean flag = brdao.checkCanAdminDeleteThisBook(bnum);
	boolean flag2 = rdao.checkCanAdminDeleteThisBook(bnum);
	  
	String msg = null;
	String url = null;;
	
	if(flag == true) {
		msg = "회원이 대출중인 도서는 삭제할 수 없습니다.";
		url = "showAllBorrowedBook.jsp";
	} else {
		if(flag2 == true) {
			msg = "회원이 예약중인 도서는 삭제할 수 없습니다.";
			url = "showBook.jsp";
		} else {
			int cnt = bdao.deleteBook(bnum);
		 	String configFolder = config.getServletContext().getRealPath("admin/ManageBook/bookImage");
		 	
		 	if(cnt > 0) {
		 		File delFile = new File(configFolder, bimage);
		 		if(delFile.exists()) {
		 			delFile.delete();
					msg = "delete Book 성공";
					url = "showBook.jsp";
		 		}
		 	} else {
				msg = "delete Book 실패";
				url = "showBook.jsp";
		 	}
		}
	}
	
 
      out.write("  \r\n");
      out.write(" \r\n");
      out.write(" 	<script type=\"text/javascript\">\r\n");
      out.write("		alert(\"");
      out.print( msg );
      out.write("\");\r\n");
      out.write("		location.href = \"");
      out.print( url );
      out.write("\"\r\n");
      out.write("	</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
