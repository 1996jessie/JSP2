/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-11 01:29:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPkg.MovieDao;
import myPkg.MovieBean;

public final class updateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("myPkg.MovieDao");
    _jspx_imports_classes.add("myPkg.MovieBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("updateForm.jsp<br>\r\n");
      out.write("<h2>영화 선호도 수정</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	table {\r\n");
      out.write("		width: 700px;\r\n");
      out.write("	}\r\n");
      out.write("	tr:last-child{\r\n");
      out.write("		text-align : center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");

			MovieDao mdao = MovieDao.getInstance();
			System.out.println("updateForm.jsp mdao : " + mdao);
		
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String[] genre = {"공포","다큐","액션","애니메이션"};
	String[] time = {"8-10","10-12","12-14","14-16","16-18","18-20","20-22","22-24"};
	Integer[] partner = {1,2,3,4,5};
	int i;
	int num = Integer.parseInt(request.getParameter("num"));
	
	MovieBean mb = mdao.getMovieByNum(num);
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name = \"myform\" action = \"updateProc.jsp?num=");
      out.print( num );
      out.write("\" method = \"post\">\r\n");
      out.write("	<table border = 1>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>아이디</th>\r\n");
      out.write("		<td>\r\n");
      out.write("			<input type = \"text\" name = \"id2\" value = ");
      out.print( mb.getId() );
      out.write(" disabled>\r\n");
      out.write("			<input type = \"hidden\" name = \"id\" value = ");
      out.print( mb.getId() );
      out.write(">\r\n");
      out.write("		</td> \r\n");
      out.write("		<!-- disabled 쓰면 칸이 비활성화됨(값도 안 넘어감) -->\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>이름</th>\r\n");
      out.write("		<td><input type = \"text\" name = \"name\" value = ");
      out.print( mb.getName() );
      out.write("></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>나이</th>\r\n");
      out.write("		<td><input type = \"text\" name = \"age\" value = ");
      out.print( mb.getAge() );
      out.write("></td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>좋아하는 장르</th>\r\n");
      out.write("		<td>\r\n");
      out.write("			");
	for(i=0;i<genre.length;i++) { 
      out.write("\r\n");
      out.write("				<input type = \"checkbox\" name = \"genre\" value = \"");
      out.print( genre[i] );
      out.write('"');
      out.write(' ');
 if(mb.getGenre().contains(genre[i])) { 
      out.write(" checked ");
 } 
      out.write('>');
      out.print(	genre[i] );
      out.write("\r\n");
      out.write("			");
	} 
      out.write("	\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>좋아하는 시간대</th>\r\n");
      out.write("		<td>\r\n");
      out.write("			<select name = \"time\">\r\n");
      out.write("			");
	for(i=0;i<time.length;i++) { 
      out.write("\r\n");
      out.write("					<option value=\"");
      out.print( time[i] );
      out.write('"');
      out.write(' ');
 if(mb.getTime().equals(time[i])) { 
      out.write(" selected ");
 } 
      out.write('>');
      out.write(' ');
      out.print( time[i] );
      out.write("\r\n");
      out.write("			");
	} 
      out.write("\r\n");
      out.write("			</select>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>동반 관객수</th>\r\n");
      out.write("		<td>\r\n");
      out.write("			");
	for(i=0;i<partner.length;i++) { 
      out.write("\r\n");
      out.write("				<input type = \"radio\" name = \"partner\" value = \"");
      out.print( partner[i] );
      out.write('"');
      out.write(' ');
 if(mb.getPartner()== partner[i]) { 
      out.write(" checked ");
 } 
      out.write('>');
      out.print( partner[i] );
      out.write("\r\n");
      out.write("			");
	} 
      out.write("		\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th>영화관 개선사항</th>\r\n");
      out.write("		<td><textarea name=\"memo\" rows=\"3\" cols=\"30\">");
      out.print( mb.getMemo() );
      out.write("</textarea></td>\r\n");
      out.write("	</tr>	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan = \"2\"><input type=\"submit\" id = \"sub\" value = \"수정하기\"> </td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
