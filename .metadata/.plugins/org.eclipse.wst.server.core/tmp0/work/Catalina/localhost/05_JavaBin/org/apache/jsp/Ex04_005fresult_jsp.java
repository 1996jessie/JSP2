/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-01 03:26:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPkg.FruitBean;

public final class Ex04_005fresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("myPkg.FruitBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("Ex04_result.jsp<br>\r\n");
      out.write("\r\n");


	request.setCharacterEncoding("UTF-8");
	String name = request.getParameter("name");
	String[] fruit = request.getParameterValues("fruit");
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("이름 : ");
      out.print( name );
      out.write("<br>\r\n");
      out.write("	 \r\n");
	
	if(fruit == null){
		out.println("좋아하는 과일을 선택하지 않았습니다..<br>");
	}else{ 
		out.print("좋아하는 과일 : ");
		for(int i=0;i<fruit.length;i++){
			out.print(fruit[i]+" ");
		}
	}

      out.write("	\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");

	FruitBean fb = new FruitBean();
	fb.setName(name);
	fb.setFruit(fruit);

      out.write("\r\n");
      out.write("\r\n");
      out.write("이름 : ");
      out.print( fb.getName() );
      out.write(" <br>\r\n");
      out.write("fruit의 주소 : ");
      out.print( fb.getFruit() );
      out.write("  <br> <!-- 0번방의 주소가 리턴됨 -->\r\n");
      out.write("좋아하는 과일 : \r\n");

	String[] farr = fb.getFruit();
	for(int i=0;i<farr.length;i++) {
		out.print(farr[i] + " ");
	}
	out.print("<br>");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      myPkg.FruitBean fb2 = null;
      fb2 = (myPkg.FruitBean) _jspx_page_context.getAttribute("fb2", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (fb2 == null){
        fb2 = new myPkg.FruitBean();
        _jspx_page_context.setAttribute("fb2", fb2, javax.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write('\r');
        out.write('\n');
        out.write('	');
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb2"), "name", request.getParameter("name"), request, "name", false);
        out.write('\r');
        out.write('\n');
        out.write('	');
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb2"), "fruit", request.getParameter("fruit"), request, "fruit", false);
        out.write('\r');
        out.write('\n');
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean)_jspx_page_context.findAttribute("fb2")).getName())));
      out.write("<br>\r\n");
      out.write("과일의 주소 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean)_jspx_page_context.findAttribute("fb2")).getFruit())));
      out.write("<br>\r\n");
      out.write("좋아하는 과일 : \r\n");

	String[] farr2 = fb2.getFruit();
	for(String f : farr2) {
		out.print(f+  " ");
	}
	out.print("<br>");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
