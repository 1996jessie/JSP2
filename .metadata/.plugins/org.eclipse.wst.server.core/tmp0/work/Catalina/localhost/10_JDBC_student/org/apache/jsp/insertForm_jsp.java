/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-04-08 04:54:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("        var isBlank = false;\r\n");
      out.write("        var use = \"\";\r\n");
      out.write("        var isCheck = false;\r\n");
      out.write("        \r\n");
      out.write("        $('#idCheck').click(function(){\r\n");
      out.write("            isCheck = true;\r\n");
      out.write("            if($('input[name = id]').val() == \"\"){\r\n");
      out.write("                $('#idmessage').html(\"<font color='red'> 입력이 누락되었습니다 </font>\");\r\n");
      out.write("                alert('입력이 누락되었습니다');\r\n");
      out.write("                isBlank = true;\r\n");
      out.write("                return;\r\n");
      out.write("            } //누락체크\r\n");
      out.write("			isBlank = false; //다시 초기화\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url : \"id_check_proc.jsp\",\r\n");
      out.write("                data : ({\r\n");
      out.write("                        userId : $('input[name = id]').val()\r\n");
      out.write("                }),\r\n");
      out.write("                success : function(data){\r\n");
      out.write("                    if(jQuery.trim(data) == '중복 아님'){\r\n");
      out.write("                        $('#idmessage').html(\"<font color='blue'> 사용 가능합니다. </font>\");\r\n");
      out.write("                        $('#idmessage').show();\r\n");
      out.write("                        use = \"possible\";\r\n");
      out.write("                    }else{\r\n");
      out.write("                        $('#idmessage').html(\"<font color='red'> 이미 사용중인 아이디입니다.</font>\");\r\n");
      out.write("                        $('#idmessage').show();\r\n");
      out.write("                        use = \"impossible\";\r\n");
      out.write("                    }\r\n");
      out.write("                }//success\r\n");
      out.write("            }); //중복체크 : ajax\r\n");
      out.write("        }); //click\r\n");
      out.write("\r\n");
      out.write("         $('input[name=id]').keydown(function(){\r\n");
      out.write("            $('#idmessage').css('display','none');\r\n");
      out.write("            isCheck = false;\r\n");
      out.write("            use = \"\";\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("         $('#sub').click(function(){\r\n");
      out.write("             if(use == \"impossible\"){\r\n");
      out.write("                 alert(\"이미 사용중인 아이디입니다.\");\r\n");
      out.write("                 return false;\r\n");
      out.write("             }else if(isCheck == false){\r\n");
      out.write("                 alert(\"중복체크를 먼저 하세요\");\r\n");
      out.write("                 return false;\r\n");
      out.write("             }else if(isBlank == true){\r\n");
      out.write("                 alert('아이디를 입력하세요');\r\n");
      out.write("                 return false;\r\n");
      out.write("             }\r\n");
      out.write("         });\r\n");
      out.write("    });//ready\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<h2>회원가입</h2>\r\n");
      out.write("\r\n");

	String[] hobby = {"달리기","수영","등산","영화"};
	

      out.write("\r\n");
      out.write("<form action = \"insertProc.jsp\" method = \"post\">\r\n");
      out.write("	아이디 : <input type = \"text\" name = \"id\">\r\n");
      out.write("			<input type = \"button\" id = \"idCheck\" value = \"중복체크\">\r\n");
      out.write("			<span id = \"idmessage\"></span>\r\n");
      out.write("			<br><br>\r\n");
      out.write("	비밀번호 : <input type = \"password\" name = \"passwd\">\r\n");
      out.write("			<br><br>\r\n");
      out.write("	이름 : <input type = \"text\" name = \"name\">\r\n");
      out.write("			<br><br>\r\n");
      out.write("	생년월일 : <select name = \"year\">\r\n");
      out.write("				");
	for(int i=2024;i>=1930;i--){ 
      out.write("\r\n");
      out.write("							<option value = \"");
      out.print( i );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( i );
      out.write(" \r\n");
      out.write("					");
	} 
      out.write("\r\n");
      out.write("			</select> 년\r\n");
      out.write("			\r\n");
      out.write("			<select name = \"month\">\r\n");
      out.write("				");
	for(int i=1;i<=12;i++){ 
      out.write("\r\n");
      out.write("							<option value = \"");
      out.print( i );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( i );
      out.write(" \r\n");
      out.write("					");
	} 
      out.write("\r\n");
      out.write("			</select> 월\r\n");
      out.write("			\r\n");
      out.write("			<select name = \"day\">\r\n");
      out.write("				");
	for(int i=1;i<=31;i++){ 
      out.write("\r\n");
      out.write("							<option value = \"");
      out.print( i );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( i );
      out.write(" \r\n");
      out.write("					");
	} 
      out.write("\r\n");
      out.write("			</select> 일\r\n");
      out.write("			<br><br>\r\n");
      out.write("	취미 : 	");
	for(int i=0;i<hobby.length;i++) { 
      out.write("\r\n");
      out.write("				");
      out.print(	hobby[i] );
      out.write("<input type = \"checkbox\" name = \"hobby\" value = \"");
      out.print( hobby[i] );
      out.write("\">\r\n");
      out.write("			");
	} 
      out.write("\r\n");
      out.write("			<br><br>\r\n");
      out.write("	[점수입력] <br>\r\n");
      out.write("	C언어 : <input type = \"text\" name = \"c\">	JAVA : <input type = \"text\" name = \"java\"> jsp : <input type = \"text\" name = \"jsp\">\r\n");
      out.write("	<br><br>\r\n");
      out.write("	<input type=\"submit\" id = \"sub\" value=\"가입하기\"> \r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
